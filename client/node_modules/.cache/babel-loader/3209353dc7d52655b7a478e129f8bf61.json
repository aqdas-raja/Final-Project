{"ast":null,"code":"var _jsxFileName = \"D:\\\\Test\\\\test\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import { useState, useEffect, createContext } from 'react'\n// import CssBaseline from '@mui/material/CssBaseline'\n// import { ThemeProvider } from '@mui/material/styles'\n// import theme from './styles/theme'\n// import Routes from './Routes'\n// import Home from './components/Home'\n// export const UserContext = createContext({})\n// function App() {\n//   const [loading, setLoading] = useState(true)\n//   const [userSession, setUserSession] = useState(true)\n//   useEffect(() => {\n//     const fetchUserAuth = async () => {\n//       try {\n//         setLoading(true)\n//         const res = await fetch('/api/isAuth')\n//         if (!res.ok) return setLoading(false)\n//         setUserSession(await res.json())\n//         setLoading(false)\n//       } catch (error) {\n//         setLoading(false)\n//         console.error('There was an error fetch auth', error)\n//         return\n//       }\n//     }\n//     fetchUserAuth()\n//   }, [])\n//   return (\n//     <UserContext.Provider value={userSession}>\n//       <ThemeProvider theme={theme}>\n//         <CssBaseline />\n//         {loading ? <>loading...</> : <Routes />}\n//       </ThemeProvider>\n//       <Home/>\n//     </UserContext.Provider>\n//   )\n// }\n// export default App\nimport { useState, useEffect, createContext } from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './styles/theme';\nimport Routes from './Routes';\nimport Home from './components/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({});\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [userSession, setUserSession] = useState({\n    email: '',\n    isAuthenticated: false\n  });\n  useEffect(() => {\n    const fetchUserAuth = async () => {\n      try {\n        setLoading(true);\n        const res = await fetch('/api/isAuth');\n        if (!res.ok) return setLoading(false);\n        const {\n          isAuthenticated,\n          email\n        } = await res.json();\n        setUserSession({\n          isAuthenticated,\n          email\n        });\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n        console.error('There was an error fetching auth', error);\n      }\n    };\n\n    fetchUserAuth();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: userSession,\n    children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"loading...\"\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zuLPCinVeFLCee8VqfYorJwrln0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Test/test/client/src/App.js"],"names":["useState","useEffect","createContext","CssBaseline","ThemeProvider","theme","Routes","Home","UserContext","App","loading","setLoading","userSession","setUserSession","email","isAuthenticated","fetchUserAuth","res","fetch","ok","json","error","console"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASO,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC;AAAEc,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,eAAe,EAAE;AAA9B,GAAD,CAA9C;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,aAAa,GAAG,YAAY;AAChC,UAAI;AACFL,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMM,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAD,CAAvB;AACA,YAAI,CAACD,GAAG,CAACE,EAAT,EAAa,OAAOR,UAAU,CAAC,KAAD,CAAjB;AAEb,cAAM;AAAEI,UAAAA,eAAF;AAAmBD,UAAAA;AAAnB,YAA6B,MAAMG,GAAG,CAACG,IAAJ,EAAzC;AACAP,QAAAA,cAAc,CAAC;AAAEE,UAAAA,eAAF;AAAmBD,UAAAA;AAAnB,SAAD,CAAd;AACAH,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OARD,CAQE,OAAOU,KAAP,EAAc;AACdV,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAW,QAAAA,OAAO,CAACD,KAAR,CAAc,kCAAd,EAAkDA,KAAlD;AACD;AACF,KAbD;;AAcAL,IAAAA,aAAa;AACd,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEJ,WAA7B;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEP,KAAtB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGK,OAAO,gBAAG;AAAA;AAAA,uBAAH,gBAAqB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAF/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA/BQD,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["// import { useState, useEffect, createContext } from 'react'\n// import CssBaseline from '@mui/material/CssBaseline'\n// import { ThemeProvider } from '@mui/material/styles'\n// import theme from './styles/theme'\n// import Routes from './Routes'\n// import Home from './components/Home'\n\n\n// export const UserContext = createContext({})\n\n// function App() {\n//   const [loading, setLoading] = useState(true)\n//   const [userSession, setUserSession] = useState(true)\n\n//   useEffect(() => {\n//     const fetchUserAuth = async () => {\n//       try {\n//         setLoading(true)\n//         const res = await fetch('/api/isAuth')\n//         if (!res.ok) return setLoading(false)\n\n//         setUserSession(await res.json())\n//         setLoading(false)\n//       } catch (error) {\n//         setLoading(false)\n//         console.error('There was an error fetch auth', error)\n//         return\n//       }\n//     }\n//     fetchUserAuth()\n//   }, [])\n\n//   return (\n//     <UserContext.Provider value={userSession}>\n//       <ThemeProvider theme={theme}>\n//         <CssBaseline />\n//         {loading ? <>loading...</> : <Routes />}\n//       </ThemeProvider>\n//       <Home/>\n//     </UserContext.Provider>\n//   )\n// }\n\n// export default App\n\nimport { useState, useEffect, createContext } from 'react'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { ThemeProvider } from '@mui/material/styles'\nimport theme from './styles/theme'\nimport Routes from './Routes'\nimport Home from './components/Home'\n\nexport const UserContext = createContext({})\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const [userSession, setUserSession] = useState({ email: '', isAuthenticated: false })\n\n  useEffect(() => {\n    const fetchUserAuth = async () => {\n      try {\n        setLoading(true)\n        const res = await fetch('/api/isAuth')\n        if (!res.ok) return setLoading(false)\n\n        const { isAuthenticated, email } = await res.json()\n        setUserSession({ isAuthenticated, email })\n        setLoading(false)\n      } catch (error) {\n        setLoading(false)\n        console.error('There was an error fetching auth', error)\n      }\n    }\n    fetchUserAuth()\n  }, [])\n\n  return (\n    <UserContext.Provider value={userSession}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        {loading ? <>loading...</> : <Routes />}\n      </ThemeProvider>\n      <Home />\n    </UserContext.Provider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}