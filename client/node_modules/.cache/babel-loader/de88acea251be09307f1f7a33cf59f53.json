{"ast":null,"code":"var _jsxFileName = \"D:\\\\Test\\\\test\\\\client\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react'\n// import { Link as RouterLink, useNavigate } from 'react-router-dom'\n// import validator from 'validator'\n// import { regexPassword } from '../utils'\n// import {\n//   Paper,\n//   Container,\n//   Link,\n//   Stack,\n//   Button,\n//   Box,\n//   Divider,\n//   Avatar,\n//   Typography,\n//   TextField,\n//   FilledInput,\n//   InputAdornment,\n//   IconButton,\n//   InputLabel,\n//   FormControl,\n//   FormHelperText,\n// } from '@mui/material'\n// import {\n//   Visibility,\n//   VisibilityOff,\n// } from '@mui/icons-material'\n// import TagFacesIcon from '@mui/icons-material/TagFaces';\n// import theme from '../styles/theme'\n// import '../styles/App.css'\n// function Login() {\n//   const navigate = useNavigate();\n//   const [values, setValues] = useState({\n//     email: '',\n//     password: '',\n//     showPassword: false,\n//   })\n//   const [errors, setErrors] = useState({\n//     email: false,\n//     password: false,\n//     fetchError: false,\n//     fetchErrorMsg: '',\n//   })\n//   const handleChange = (fieldName) => (event) => {\n//     const currValue = event.target.value\n//     let isCorrectValue =\n//       fieldName === 'email'\n//         ? validator.isEmail(currValue)\n//         : regexPassword.test(currValue)\n//     isCorrectValue\n//       ? setErrors({ ...errors, [fieldName]: false })\n//       : setErrors({ ...errors, [fieldName]: true })\n//     setValues({ ...values, [fieldName]: event.target.value })\n//   }\n//   const handleShowPassword = () => {\n//     setValues({\n//       ...values,\n//       showPassword: !values.showPassword,\n//     })\n//   }\n//   const handleSubmit = async (event) => {\n//     event.preventDefault()\n//     try {\n//       const res = await fetch('/api/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           email: values.email,\n//           password: values.password,\n//         }),\n//       })\n//       if (!res.ok) {\n//         const error = await res.json()\n//         return setErrors({\n//           ...errors,\n//           fetchError: true,\n//           fetchErrorMsg: error.msg,\n//         })\n//       }\n//       const data = await res.json()\n//       navigate(\"/home\");\n//       setErrors({\n//         ...errors,\n//         fetchError: true,\n//         fetchErrorMsg: data.msg,\n//       })\n//       setValues({\n//         email: '',\n//         password: '',\n//         showPassword: false,\n//       })\n//       return\n//     } catch (error) {\n//       setErrors({\n//         ...errors,\n//         fetchError: true,\n//         fetchErrorMsg:\n//           'There was a problem with our server, please try again later',\n//       })\n//     }\n//   }\n//   return (\n//     <>\n//       <Container sx={{ marginTop: '10%' }} maxWidth='xs'>\n//         <Paper elevation={6}>\n//           <Container\n//             maxWidth='sm'\n//             sx={{\n//               display: 'flex',\n//               flexDirection: 'column',\n//               justifyContent: 'center',\n//               alignItems: 'center',\n//               paddingTop: '20px',\n//             }}>\n//             <Avatar\n//               sx={{\n//                 width: 80,\n//                 height: 80,\n//                 bgcolor: theme.palette.primary.main,\n//                 boxShadow: '0px 0px 8px rgba(131,153,167,0.99)',\n//               }}>\n//               <TagFacesIcon sx={{ fontSize: 70 }} />\n//             </Avatar>\n//             <h2>Login</h2>\n//           </Container>\n//           <Stack\n//             component='form'\n//             onSubmit={handleSubmit}\n//             noValidate\n//             spacing={6}\n//             sx={{ bgcolor: '#f5f5f6', padding: '40px' }}>\n//             <TextField\n//               variant='filled'\n//               type='email'\n//               label='Email'\n//               value={values.email}\n//               onChange={handleChange('email')}\n//               error={errors.email}\n//               helperText={errors.email && 'Please insert a valid email address'}\n//             />\n//             <FormControl variant='filled'>\n//               <InputLabel htmlFor='password-field'>Password</InputLabel>\n//               <FilledInput\n//                 id='password-field'\n//                 type={values.showPassword ? 'text' : 'password'}\n//                 value={values.password}\n//                 onChange={handleChange('password')}\n//                 error={errors.password}\n//                 endAdornment={\n//                   <InputAdornment position='end'>\n//                     <IconButton\n//                       aria-label='toggle password visibility'\n//                       onClick={handleShowPassword}\n//                       edge='end'>\n//                       {values.showPassword ? <VisibilityOff /> : <Visibility />}\n//                     </IconButton>\n//                   </InputAdornment>\n//                 }\n//               />\n//             </FormControl>\n//             <Box\n//               sx={{\n//                 display: 'flex',\n//                 justifyContent: 'center',\n//               }}>\n//               <Button\n//                 variant='contained'\n//                 size='large'\n//                 type='submit'\n//                 disabled={errors.email || errors.password}\n//                 sx={{\n//                   minWidth: '70%',\n//                 }}>\n//                 Login\n//               </Button>\n//             </Box>\n//             {errors.fetchError && (\n//               <FormHelperText error>{errors.fetchErrorMsg}</FormHelperText>\n//             )}\n//             <Divider />\n//             <Typography paragraph align='center'>\n//               Don't have an account yet?{' '}\n//               <Link component={RouterLink} to='/signup'>\n//                 Sign up here\n//               </Link>\n//             </Typography>\n//           </Stack>\n//         </Paper>\n//       </Container>\n//     </>\n//   )\n// }\n// export default Login\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = e => {\n    e.preventDefault();\n    console.log('Username:', username);\n    console.log('Password:', password); // Add your login logic here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Test/test/client/src/components/Login.js"],"names":["React","useState","Login","username","setUsername","password","setPassword","handleLogin","e","preventDefault","console","log","target","value"],"mappingsgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMM,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,QAAzB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,QAAzB,EAHyB,CAIzB;AACD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEE,WAAhB;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,KAAK,EAAEJ,QAHT;AAIE,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,KAAK,EAAER,QAHT;AAIE,UAAA,QAAQ,EAAGG,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CArCD;;GAAMX,K;;KAAAA,K;AAuCN,eAAeA,KAAf","sourcesContent":["// import React, { useState } from 'react'\n// import { Link as RouterLink, useNavigate } from 'react-router-dom'\n// import validator from 'validator'\n// import { regexPassword } from '../utils'\n\n// import {\n//   Paper,\n//   Container,\n//   Link,\n//   Stack,\n//   Button,\n//   Box,\n//   Divider,\n//   Avatar,\n//   Typography,\n//   TextField,\n//   FilledInput,\n//   InputAdornment,\n//   IconButton,\n//   InputLabel,\n//   FormControl,\n//   FormHelperText,\n// } from '@mui/material'\n// import {\n//   Visibility,\n//   VisibilityOff,\n// } from '@mui/icons-material'\n// import TagFacesIcon from '@mui/icons-material/TagFaces';\n// import theme from '../styles/theme'\n// import '../styles/App.css'\n\n// function Login() {\n//   const navigate = useNavigate();\n\n//   const [values, setValues] = useState({\n//     email: '',\n//     password: '',\n//     showPassword: false,\n//   })\n//   const [errors, setErrors] = useState({\n//     email: false,\n//     password: false,\n//     fetchError: false,\n//     fetchErrorMsg: '',\n//   })\n\n//   const handleChange = (fieldName) => (event) => {\n//     const currValue = event.target.value\n//     let isCorrectValue =\n//       fieldName === 'email'\n//         ? validator.isEmail(currValue)\n//         : regexPassword.test(currValue)\n\n//     isCorrectValue\n//       ? setErrors({ ...errors, [fieldName]: false })\n//       : setErrors({ ...errors, [fieldName]: true })\n\n//     setValues({ ...values, [fieldName]: event.target.value })\n//   }\n\n//   const handleShowPassword = () => {\n//     setValues({\n//       ...values,\n//       showPassword: !values.showPassword,\n//     })\n//   }\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault()\n\n//     try {\n//       const res = await fetch('/api/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           email: values.email,\n//           password: values.password,\n//         }),\n//       })\n\n//       if (!res.ok) {\n//         const error = await res.json()\n//         return setErrors({\n//           ...errors,\n//           fetchError: true,\n//           fetchErrorMsg: error.msg,\n//         })\n//       }\n\n//       const data = await res.json()\n//       navigate(\"/home\");\n\n//       setErrors({\n//         ...errors,\n//         fetchError: true,\n//         fetchErrorMsg: data.msg,\n//       })\n//       setValues({\n//         email: '',\n//         password: '',\n//         showPassword: false,\n//       })\n//       return\n//     } catch (error) {\n//       setErrors({\n//         ...errors,\n//         fetchError: true,\n//         fetchErrorMsg:\n//           'There was a problem with our server, please try again later',\n//       })\n//     }\n//   }\n\n//   return (\n//     <>\n//       <Container sx={{ marginTop: '10%' }} maxWidth='xs'>\n//         <Paper elevation={6}>\n//           <Container\n//             maxWidth='sm'\n//             sx={{\n//               display: 'flex',\n//               flexDirection: 'column',\n//               justifyContent: 'center',\n//               alignItems: 'center',\n//               paddingTop: '20px',\n//             }}>\n//             <Avatar\n//               sx={{\n//                 width: 80,\n//                 height: 80,\n//                 bgcolor: theme.palette.primary.main,\n//                 boxShadow: '0px 0px 8px rgba(131,153,167,0.99)',\n//               }}>\n//               <TagFacesIcon sx={{ fontSize: 70 }} />\n//             </Avatar>\n//             <h2>Login</h2>\n//           </Container>\n//           <Stack\n//             component='form'\n//             onSubmit={handleSubmit}\n//             noValidate\n//             spacing={6}\n//             sx={{ bgcolor: '#f5f5f6', padding: '40px' }}>\n//             <TextField\n//               variant='filled'\n//               type='email'\n//               label='Email'\n//               value={values.email}\n//               onChange={handleChange('email')}\n//               error={errors.email}\n//               helperText={errors.email && 'Please insert a valid email address'}\n//             />\n\n//             <FormControl variant='filled'>\n//               <InputLabel htmlFor='password-field'>Password</InputLabel>\n//               <FilledInput\n//                 id='password-field'\n//                 type={values.showPassword ? 'text' : 'password'}\n//                 value={values.password}\n//                 onChange={handleChange('password')}\n//                 error={errors.password}\n//                 endAdornment={\n//                   <InputAdornment position='end'>\n//                     <IconButton\n//                       aria-label='toggle password visibility'\n//                       onClick={handleShowPassword}\n//                       edge='end'>\n//                       {values.showPassword ? <VisibilityOff /> : <Visibility />}\n//                     </IconButton>\n//                   </InputAdornment>\n//                 }\n//               />\n//             </FormControl>\n//             <Box\n//               sx={{\n//                 display: 'flex',\n//                 justifyContent: 'center',\n//               }}>\n//               <Button\n//                 variant='contained'\n//                 size='large'\n//                 type='submit'\n//                 disabled={errors.email || errors.password}\n//                 sx={{\n//                   minWidth: '70%',\n//                 }}>\n//                 Login\n//               </Button>\n//             </Box>\n//             {errors.fetchError && (\n//               <FormHelperText error>{errors.fetchErrorMsg}</FormHelperText>\n//             )}\n//             <Divider />\n//             <Typography paragraph align='center'>\n//               Don't have an account yet?{' '}\n//               <Link component={RouterLink} to='/signup'>\n//                 Sign up here\n//               </Link>\n//             </Typography>\n//           </Stack>\n//         </Paper>\n//       </Container>\n//     </>\n//   )\n// }\n\n// export default Login\n\nimport React, { useState } from 'react';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    console.log('Username:', username);\n    console.log('Password:', password);\n    // Add your login logic here\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}